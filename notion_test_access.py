#!/usr/bin/env python3
"""Test: K ƒçemu m√°m p≈ô√≠stup v Notionu"""

import os
from notion_client import Client

NOTION_TOKEN = os.getenv("NOTION_TOKEN")

def test_access():
    notion = Client(auth=NOTION_TOKEN)

    print("üîç Testuji p≈ô√≠stup k Notion API...\n")

    # Test 1: Z√≠skej informace o tokenu
    try:
        # Zkus vytvo≈ôit str√°nku BEZ parent ID (vytvo≈ô√≠ se v root workspace)
        print("1Ô∏è‚É£ Zkou≈°√≠m vytvo≈ôit str√°nku v root workspace...\n")

        page = notion.pages.create(
            parent={"type": "workspace"},
            properties={
                "title": {
                    "title": [{
                        "text": {"content": "TEST - Mobilheim Wiki"}
                    }]
                }
            },
            icon={"type": "emoji", "emoji": "üè†"}
        )

        print(f"‚úÖ √öSPƒöCH! Str√°nka vytvo≈ôena!")
        print(f"   URL: https://notion.so/{page['id'].replace('-', '')}")
        print(f"   ID: {page['id']}\n")

        return page['id']

    except Exception as e:
        print(f"‚ùå Chyba p≈ôi vytv√°≈ôen√≠ str√°nky: {e}\n")

        # Zkus search
        print("2Ô∏è‚É£ Zkou≈°√≠m vyhledat existuj√≠c√≠ str√°nky...\n")
        try:
            results = notion.search()
            print(f"‚úÖ Search funguje! Nalezeno: {len(results.get('results', []))} polo≈æek\n")

            for i, item in enumerate(results.get('results', [])[:5]):
                print(f"{i+1}. {item.get('object')}: {item['id']}")

        except Exception as e2:
            print(f"‚ùå Search tak√© selhal: {e2}\n")

        # Zkus list users
        print("3Ô∏è‚É£ Zkou≈°√≠m z√≠skat seznam u≈æivatel≈Ø...\n")
        try:
            users = notion.users.list()
            print(f"‚úÖ Users API funguje! Poƒçet: {len(users.get('results', []))}\n")
        except Exception as e3:
            print(f"‚ùå Users API selhalo: {e3}\n")

        print("\n" + "="*60)
        print("Z√ÅVƒöR: Integrace m√° omezen√Ω p≈ô√≠stup nebo ≈°patn√Ω token.")
        print("="*60)

if __name__ == "__main__":
    test_access()
